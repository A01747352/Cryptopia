{"ast":null,"code":"var _jsxFileName = \"/Users/santiserrano/Cryptopia/cryptopage/frontend/src/components/Dashboard/TopCryptocurrenciesCard.jsx\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopCryptocurrenciesCard = ({\n  data\n}) => {\n  if (!data || data.length === 0) return null;\n  const chartData = {\n    labels: data.map(item => item.nombre),\n    datasets: [{\n      data: data.map(item => item.total),\n      backgroundColor: ['#ff6384', '#36a2eb', '#ffce56', '#4caf50', '#6c63ff'],\n      borderWidth: 0\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          color: '#a0a0a0',\n          padding: 20,\n          font: {\n            size: 12\n          }\n        }\n      },\n      tooltip: {\n        backgroundColor: '#333',\n        titleColor: '#fff',\n        bodyColor: '#fff',\n        borderColor: '#6c63ff',\n        borderWidth: 1,\n        callbacks: {\n          label: function (context) {\n            const label = context.label || '';\n            const value = context.raw || 0;\n            return `${label}: ${value.toFixed(2)}`;\n          }\n        }\n      }\n    },\n    cutout: '65%'\n  };\n\n  // Calcular el total de criptomonedas\n  const totalCoins = data.reduce((acc, curr) => acc + curr.total, 0).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card cryptocurrencies-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Cryptocurrencies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crypto-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crypto-chart\",\n        children: /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crypto-total\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: totalCoins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Total Coins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c = TopCryptocurrenciesCard;\nexport default TopCryptocurrenciesCard;\nvar _c;\n$RefreshReg$(_c, \"TopCryptocurrenciesCard\");","map":{"version":3,"names":["React","Doughnut","jsxDEV","_jsxDEV","TopCryptocurrenciesCard","data","length","chartData","labels","map","item","nombre","datasets","total","backgroundColor","borderWidth","options","responsive","maintainAspectRatio","plugins","legend","position","color","padding","font","size","tooltip","titleColor","bodyColor","borderColor","callbacks","label","context","value","raw","toFixed","cutout","totalCoins","reduce","acc","curr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/santiserrano/Cryptopia/cryptopage/frontend/src/components/Dashboard/TopCryptocurrenciesCard.jsx"],"sourcesContent":["import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst TopCryptocurrenciesCard = ({ data }) => {\n  if (!data || data.length === 0) return null;\n  \n  const chartData = {\n    labels: data.map(item => item.nombre),\n    datasets: [\n      {\n        data: data.map(item => item.total),\n        backgroundColor: [\n          '#ff6384',\n          '#36a2eb',\n          '#ffce56',\n          '#4caf50',\n          '#6c63ff'\n        ],\n        borderWidth: 0,\n      }\n    ]\n  };\n  \n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          color: '#a0a0a0',\n          padding: 20,\n          font: {\n            size: 12\n          }\n        }\n      },\n      tooltip: {\n        backgroundColor: '#333',\n        titleColor: '#fff',\n        bodyColor: '#fff',\n        borderColor: '#6c63ff',\n        borderWidth: 1,\n        callbacks: {\n          label: function(context) {\n            const label = context.label || '';\n            const value = context.raw || 0;\n            return `${label}: ${value.toFixed(2)}`;\n          }\n        }\n      }\n    },\n    cutout: '65%'\n  };\n  \n  // Calcular el total de criptomonedas\n  const totalCoins = data.reduce((acc, curr) => acc + curr.total, 0).toFixed(2);\n  \n  return (\n    <div className=\"card cryptocurrencies-card\">\n      <h2>Top Cryptocurrencies</h2>\n      <div className=\"crypto-container\">\n        <div className=\"crypto-chart\">\n          <Doughnut data={chartData} options={options} />\n        </div>\n        <div className=\"crypto-total\">\n          <h3>{totalCoins}</h3>\n          <p>Total Coins</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TopCryptocurrenciesCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}