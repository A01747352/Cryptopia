{"ast":null,"code":"var _jsxFileName = \"/Users/santiserrano/Cryptopia/cryptopage/frontend/src/components/Dashboard/ActiveUsersCard.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActiveUsersCard = ({\n  data\n}) => {\n  if (!data || data.length === 0) return null;\n\n  // Formatear las fechas para mostrar\n  const labels = data.map(item => {\n    const date = new Date(item.dia);\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  });\n  const chartData = {\n    labels,\n    datasets: [{\n      label: 'Active Users',\n      data: data.map(item => item.usuarios),\n      fill: false,\n      borderColor: '#4caf50',\n      tension: 0.4,\n      pointBackgroundColor: '#4caf50'\n    }]\n  };\n  const options = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)'\n        },\n        ticks: {\n          color: '#a0a0a0'\n        }\n      },\n      x: {\n        grid: {\n          display: false\n        },\n        ticks: {\n          color: '#a0a0a0'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        backgroundColor: '#333',\n        titleColor: '#fff',\n        bodyColor: '#fff',\n        borderColor: '#6c63ff',\n        borderWidth: 1\n      }\n    }\n  };\n\n  // Calcular el promedio de usuarios activos\n  const averageUsers = Math.round(data.reduce((acc, curr) => acc + curr.usuarios, 0) / data.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card active-users-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Active Users Per Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-average\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: averageUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Avg. users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_c = ActiveUsersCard;\nexport default ActiveUsersCard;\nvar _c;\n$RefreshReg$(_c, \"ActiveUsersCard\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","ActiveUsersCard","data","length","labels","map","item","date","Date","dia","toLocaleDateString","month","day","chartData","datasets","label","usuarios","fill","borderColor","tension","pointBackgroundColor","options","responsive","scales","y","beginAtZero","grid","color","ticks","x","display","plugins","legend","tooltip","backgroundColor","titleColor","bodyColor","borderWidth","averageUsers","Math","round","reduce","acc","curr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/santiserrano/Cryptopia/cryptopage/frontend/src/components/Dashboard/ActiveUsersCard.jsx"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst ActiveUsersCard = ({ data }) => {\n  if (!data || data.length === 0) return null;\n  \n  // Formatear las fechas para mostrar\n  const labels = data.map(item => {\n    const date = new Date(item.dia);\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n  });\n  \n  const chartData = {\n    labels,\n    datasets: [\n      {\n        label: 'Active Users',\n        data: data.map(item => item.usuarios),\n        fill: false,\n        borderColor: '#4caf50',\n        tension: 0.4,\n        pointBackgroundColor: '#4caf50'\n      }\n    ]\n  };\n  \n  const options = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)'\n        },\n        ticks: {\n          color: '#a0a0a0'\n        }\n      },\n      x: {\n        grid: {\n          display: false\n        },\n        ticks: {\n          color: '#a0a0a0'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        backgroundColor: '#333',\n        titleColor: '#fff',\n        bodyColor: '#fff',\n        borderColor: '#6c63ff',\n        borderWidth: 1\n      }\n    }\n  };\n  \n  // Calcular el promedio de usuarios activos\n  const averageUsers = Math.round(\n    data.reduce((acc, curr) => acc + curr.usuarios, 0) / data.length\n  );\n  \n  return (\n    <div className=\"card active-users-card\">\n      <h2>Active Users Per Day</h2>\n      <div className=\"users-average\">\n        <h3>{averageUsers}</h3>\n        <p>Avg. users</p>\n      </div>\n      <div className=\"chart-container\">\n        <Line data={chartData} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default ActiveUsersCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}