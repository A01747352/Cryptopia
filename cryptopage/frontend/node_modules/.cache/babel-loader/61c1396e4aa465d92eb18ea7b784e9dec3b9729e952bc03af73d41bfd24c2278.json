{"ast":null,"code":"import React from'react';import{Bar}from'react-chartjs-2';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TknsByDayCard=_ref=>{let{data}=_ref;if(!data||data.length===0)return null;// Formatear las fechas para mostrar\nconst labels=data.map(item=>{const date=new Date(item.dia);return date.toLocaleDateString('en-US',{month:'short',day:'numeric'});});const chartData={labels,datasets:[{label:'TKNs Earned',data:data.map(item=>item.totalTKNs),backgroundColor:'#36a2eb',borderRadius:5}]};const options={responsive:true,scales:{y:{beginAtZero:true,grid:{color:'rgba(255, 255, 255, 0.1)'},ticks:{color:'#a0a0a0'}},x:{grid:{display:false},ticks:{color:'#a0a0a0'}}},plugins:{legend:{display:false},tooltip:{backgroundColor:'#333',titleColor:'#fff',bodyColor:'#fff',borderColor:'#36a2eb',borderWidth:1}}};// Calcular el total de TKNs ganados\nconst totalTkns=data.reduce((acc,curr)=>acc+curr.totalTKNs,0);return/*#__PURE__*/_jsxs(\"div\",{className:\"card tkns-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"TKNs Earned Per Day\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tkns-total\",children:[/*#__PURE__*/_jsx(\"h3\",{children:totalTkns.toLocaleString()}),/*#__PURE__*/_jsx(\"p\",{children:\"Total TKNs\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(Bar,{data:chartData,options:options})})]});};export default TknsByDayCard;","map":{"version":3,"names":["React","Bar","jsx","_jsx","jsxs","_jsxs","TknsByDayCard","_ref","data","length","labels","map","item","date","Date","dia","toLocaleDateString","month","day","chartData","datasets","label","totalTKNs","backgroundColor","borderRadius","options","responsive","scales","y","beginAtZero","grid","color","ticks","x","display","plugins","legend","tooltip","titleColor","bodyColor","borderColor","borderWidth","totalTkns","reduce","acc","curr","className","children","toLocaleString"],"sources":["/Users/santiserrano/Cryptopia/cryptopage/frontend/src/components/Dashboard/TknsByDayCard.jsx"],"sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst TknsByDayCard = ({ data }) => {\n  if (!data || data.length === 0) return null;\n  \n  // Formatear las fechas para mostrar\n  const labels = data.map(item => {\n    const date = new Date(item.dia);\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n  });\n  \n  const chartData = {\n    labels,\n    datasets: [\n      {\n        label: 'TKNs Earned',\n        data: data.map(item => item.totalTKNs),\n        backgroundColor: '#36a2eb',\n        borderRadius: 5,\n      }\n    ]\n  };\n  \n  const options = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)'\n        },\n        ticks: {\n          color: '#a0a0a0'\n        }\n      },\n      x: {\n        grid: {\n          display: false\n        },\n        ticks: {\n          color: '#a0a0a0'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        backgroundColor: '#333',\n        titleColor: '#fff',\n        bodyColor: '#fff',\n        borderColor: '#36a2eb',\n        borderWidth: 1\n      }\n    }\n  };\n  \n  // Calcular el total de TKNs ganados\n  const totalTkns = data.reduce((acc, curr) => acc + curr.totalTKNs, 0);\n  \n  return (\n    <div className=\"card tkns-card\">\n      <h2>TKNs Earned Per Day</h2>\n      <div className=\"tkns-total\">\n        <h3>{totalTkns.toLocaleString()}</h3>\n        <p>Total TKNs</p>\n      </div>\n      <div className=\"chart-container\">\n        <Bar data={chartData} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default TknsByDayCard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,GAAG,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC7B,GAAI,CAACC,IAAI,EAAIA,IAAI,CAACC,MAAM,GAAK,CAAC,CAAE,MAAO,KAAI,CAE3C;AACA,KAAM,CAAAC,MAAM,CAAGF,IAAI,CAACG,GAAG,CAACC,IAAI,EAAI,CAC9B,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,CAC/B,MAAO,CAAAF,IAAI,CAACG,kBAAkB,CAAC,OAAO,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,GAAG,CAAE,SAAU,CAAC,CAAC,CAC7E,CAAC,CAAC,CAEF,KAAM,CAAAC,SAAS,CAAG,CAChBT,MAAM,CACNU,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,aAAa,CACpBb,IAAI,CAAEA,IAAI,CAACG,GAAG,CAACC,IAAI,EAAIA,IAAI,CAACU,SAAS,CAAC,CACtCC,eAAe,CAAE,SAAS,CAC1BC,YAAY,CAAE,CAChB,CAAC,CAEL,CAAC,CAED,KAAM,CAAAC,OAAO,CAAG,CACdC,UAAU,CAAE,IAAI,CAChBC,MAAM,CAAE,CACNC,CAAC,CAAE,CACDC,WAAW,CAAE,IAAI,CACjBC,IAAI,CAAE,CACJC,KAAK,CAAE,0BACT,CAAC,CACDC,KAAK,CAAE,CACLD,KAAK,CAAE,SACT,CACF,CAAC,CACDE,CAAC,CAAE,CACDH,IAAI,CAAE,CACJI,OAAO,CAAE,KACX,CAAC,CACDF,KAAK,CAAE,CACLD,KAAK,CAAE,SACT,CACF,CACF,CAAC,CACDI,OAAO,CAAE,CACPC,MAAM,CAAE,CACNF,OAAO,CAAE,KACX,CAAC,CACDG,OAAO,CAAE,CACPd,eAAe,CAAE,MAAM,CACvBe,UAAU,CAAE,MAAM,CAClBC,SAAS,CAAE,MAAM,CACjBC,WAAW,CAAE,SAAS,CACtBC,WAAW,CAAE,CACf,CACF,CACF,CAAC,CAED;AACA,KAAM,CAAAC,SAAS,CAAGlC,IAAI,CAACmC,MAAM,CAAC,CAACC,GAAG,CAAEC,IAAI,GAAKD,GAAG,CAAGC,IAAI,CAACvB,SAAS,CAAE,CAAC,CAAC,CAErE,mBACEjB,KAAA,QAAKyC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B5C,IAAA,OAAA4C,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5B1C,KAAA,QAAKyC,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB5C,IAAA,OAAA4C,QAAA,CAAKL,SAAS,CAACM,cAAc,CAAC,CAAC,CAAK,CAAC,cACrC7C,IAAA,MAAA4C,QAAA,CAAG,YAAU,CAAG,CAAC,EACd,CAAC,cACN5C,IAAA,QAAK2C,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9B5C,IAAA,CAACF,GAAG,EAACO,IAAI,CAAEW,SAAU,CAACM,OAAO,CAAEA,OAAQ,CAAE,CAAC,CACvC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAnB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}