{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RevenueCard=_ref=>{let{revenue}=_ref;// Formatear el valor como moneda\nconst formattedRevenue=new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:0,maximumFractionDigits:0}).format(revenue||12495);return/*#__PURE__*/_jsxs(\"div\",{className:\"card revenue-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Revenue\"}),/*#__PURE__*/_jsx(\"div\",{className:\"revenue-amount\",children:/*#__PURE__*/_jsx(\"h2\",{children:formattedRevenue})})]});};export default RevenueCard;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","RevenueCard","_ref","revenue","formattedRevenue","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","className","children"],"sources":["/Users/santiserrano/Cryptopia/cryptopage/frontend/src/components/Dashboard/RevenueCard.jsx"],"sourcesContent":["import React from 'react';\n\nconst RevenueCard = ({ revenue }) => {\n  // Formatear el valor como moneda\n  const formattedRevenue = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(revenue || 12495);\n\n  return (\n    <div className=\"card revenue-card\">\n      <h2>Revenue</h2>\n      <div className=\"revenue-amount\">\n        <h2>{formattedRevenue}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default RevenueCard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CAC9B;AACA,KAAM,CAAAE,gBAAgB,CAAG,GAAI,CAAAC,IAAI,CAACC,YAAY,CAAC,OAAO,CAAE,CACtDC,KAAK,CAAE,UAAU,CACjBC,QAAQ,CAAE,KAAK,CACfC,qBAAqB,CAAE,CAAC,CACxBC,qBAAqB,CAAE,CACzB,CAAC,CAAC,CAACC,MAAM,CAACR,OAAO,EAAI,KAAK,CAAC,CAE3B,mBACEH,KAAA,QAAKY,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCf,IAAA,OAAAe,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBf,IAAA,QAAKc,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7Bf,IAAA,OAAAe,QAAA,CAAKT,gBAAgB,CAAK,CAAC,CACxB,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}