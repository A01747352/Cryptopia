{"ast":null,"code":"var _jsxFileName = \"/Users/santiserrano/Cryptopia/cryptopage/frontend/src/components/Dashboard/Dashboard.jsx\",\n  _s = $RefreshSig$();\n// DASHBOARD CONECTADO AL BACKEND COMO AL INICIO, CON DISEÑO MODERNO\nimport { Chart as ChartJS, CategoryScale, LinearScale,\n// 👈 ESTE ES EL QUE FALTA\nPointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nChartJS.register(CategoryScale, LinearScale,\n// 👈 REGÍSTRALO AQUÍ TAMBIÉN\nPointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nimport React, { useState, useEffect } from 'react';\nimport './Dashboard.css';\n\n// Importar servicios\nimport AnalyticsService from '../../services/analytics-service';\n\n// Importar componentes visuales\nimport AgeDistribution from './AgeDistribution';\nimport GenderDistribution from './GenderDistribution';\nimport RetentionChart from './RetentionChart';\nimport SessionsCard from './SessionsCard';\nimport RevenueCard from './RevenueCard';\nimport QuestionsCard from './QuestionsCard';\nimport AverageAccuracyCard from './AverageAccuracyCard';\nimport ActiveUsersCard from './ActiveUsersCard';\nimport TopPowerUpsCard from './TopPowerUpsCard';\nimport UserRankingCard from './UserRankingCard';\nimport TradingStatsCard from './TradingStatsCard';\nimport TknsByDayCard from './TknsByDayCard';\nimport TopCryptocurrenciesCard from './TopCryptocurrenciesCard';\nimport MostFailedQuestionsCard from './MostFailedQuestionsCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [triviaStats, setTriviaStats] = useState(null);\n  const [retentionData, setRetentionData] = useState(null);\n  const [averageAccuracy, setAverageAccuracy] = useState(null);\n  const [activeUsers, setActiveUsers] = useState(null);\n  const [topPowerUps, setTopPowerUps] = useState(null);\n  const [userRanking, setUserRanking] = useState(null);\n  const [tradingStats, setTradingStats] = useState(null);\n  const [tknsByDay, setTknsByDay] = useState(null);\n  const [topCryptos, setTopCryptos] = useState(null);\n  const [failedQuestions, setFailedQuestions] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [dashboardRes, triviaRes, retentionRes, accuracyRes, activeUsersRes, powerUpsRes, rankingRes, tradingRes, tknsRes, cryptosRes, failedQuestionsRes] = await Promise.all([AnalyticsService.getDashboardData(), AnalyticsService.getTriviaStats(), AnalyticsService.getRetentionData(), AnalyticsService.getAverageAccuracy(), AnalyticsService.getActiveUsersByDay(), AnalyticsService.getTopPowerUps(), AnalyticsService.getUserRanking(), AnalyticsService.getTradingStats(), AnalyticsService.getTknsByDay(), AnalyticsService.getTopCryptocurrencies(), AnalyticsService.getMostFailedQuestions()]);\n        setDashboardData(dashboardRes);\n        setTriviaStats(triviaRes);\n        setRetentionData(retentionRes);\n        setAverageAccuracy(accuracyRes.promedioAciertos);\n        setActiveUsers(activeUsersRes);\n        setTopPowerUps(powerUpsRes);\n        setUserRanking(rankingRes);\n        setTradingStats(tradingRes);\n        setTknsByDay(tknsRes);\n        setTopCryptos(cryptosRes);\n        setFailedQuestions(failedQuestionsRes);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: \"Cargando datos del dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard light-theme\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-row kpi-row\",\n      children: [/*#__PURE__*/_jsxDEV(SessionsCard, {\n        sessionsCount: dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.sesiones\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RevenueCard, {\n        revenue: dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.ingresos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AverageAccuracyCard, {\n        accuracy: averageAccuracy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RetentionChart, {\n        data: retentionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-row\",\n      children: [/*#__PURE__*/_jsxDEV(AgeDistribution, {\n        data: dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.edad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GenderDistribution, {\n        data: dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.genero\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActiveUsersCard, {\n        data: activeUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-row\",\n      children: [/*#__PURE__*/_jsxDEV(QuestionsCard, {\n        triviaStats: triviaStats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopPowerUpsCard, {\n        data: topPowerUps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MostFailedQuestionsCard, {\n        data: failedQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-row\",\n      children: [/*#__PURE__*/_jsxDEV(UserRankingCard, {\n        data: userRanking\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TradingStatsCard, {\n        data: tradingStats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-row\",\n      children: [/*#__PURE__*/_jsxDEV(TknsByDayCard, {\n        data: tknsByDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopCryptocurrenciesCard, {\n        data: topCryptos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"u1Ygjxbzc6UXjm+gsv/WFWbGI5Y=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","register","React","useState","useEffect","AnalyticsService","AgeDistribution","GenderDistribution","RetentionChart","SessionsCard","RevenueCard","QuestionsCard","AverageAccuracyCard","ActiveUsersCard","TopPowerUpsCard","UserRankingCard","TradingStatsCard","TknsByDayCard","TopCryptocurrenciesCard","MostFailedQuestionsCard","jsxDEV","_jsxDEV","Dashboard","_s","loading","setLoading","dashboardData","setDashboardData","triviaStats","setTriviaStats","retentionData","setRetentionData","averageAccuracy","setAverageAccuracy","activeUsers","setActiveUsers","topPowerUps","setTopPowerUps","userRanking","setUserRanking","tradingStats","setTradingStats","tknsByDay","setTknsByDay","topCryptos","setTopCryptos","failedQuestions","setFailedQuestions","fetchData","dashboardRes","triviaRes","retentionRes","accuracyRes","activeUsersRes","powerUpsRes","rankingRes","tradingRes","tknsRes","cryptosRes","failedQuestionsRes","Promise","all","getDashboardData","getTriviaStats","getRetentionData","getAverageAccuracy","getActiveUsersByDay","getTopPowerUps","getUserRanking","getTradingStats","getTknsByDay","getTopCryptocurrencies","getMostFailedQuestions","promedioAciertos","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sessionsCount","sesiones","revenue","ingresos","accuracy","data","edad","genero","_c","$RefreshReg$"],"sources":["/Users/santiserrano/Cryptopia/cryptopage/frontend/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["// DASHBOARD CONECTADO AL BACKEND COMO AL INICIO, CON DISEÑO MODERNO\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,        // 👈 ESTE ES EL QUE FALTA\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,        // 👈 REGÍSTRALO AQUÍ TAMBIÉN\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nimport React, { useState, useEffect } from 'react';\nimport './Dashboard.css';\n\n\n// Importar servicios\nimport AnalyticsService from '../../services/analytics-service';\n\n// Importar componentes visuales\nimport AgeDistribution from './AgeDistribution';\nimport GenderDistribution from './GenderDistribution';\nimport RetentionChart from './RetentionChart';\nimport SessionsCard from './SessionsCard';\nimport RevenueCard from './RevenueCard';\nimport QuestionsCard from './QuestionsCard';\nimport AverageAccuracyCard from './AverageAccuracyCard';\nimport ActiveUsersCard from './ActiveUsersCard';\nimport TopPowerUpsCard from './TopPowerUpsCard';\nimport UserRankingCard from './UserRankingCard';\nimport TradingStatsCard from './TradingStatsCard';\nimport TknsByDayCard from './TknsByDayCard';\nimport TopCryptocurrenciesCard from './TopCryptocurrenciesCard';\nimport MostFailedQuestionsCard from './MostFailedQuestionsCard';\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [triviaStats, setTriviaStats] = useState(null);\n  const [retentionData, setRetentionData] = useState(null);\n\n  const [averageAccuracy, setAverageAccuracy] = useState(null);\n  const [activeUsers, setActiveUsers] = useState(null);\n  const [topPowerUps, setTopPowerUps] = useState(null);\n  const [userRanking, setUserRanking] = useState(null);\n  const [tradingStats, setTradingStats] = useState(null);\n  const [tknsByDay, setTknsByDay] = useState(null);\n  const [topCryptos, setTopCryptos] = useState(null);\n  const [failedQuestions, setFailedQuestions] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [\n          dashboardRes,\n          triviaRes,\n          retentionRes,\n          accuracyRes,\n          activeUsersRes,\n          powerUpsRes,\n          rankingRes,\n          tradingRes,\n          tknsRes,\n          cryptosRes,\n          failedQuestionsRes\n        ] = await Promise.all([\n          AnalyticsService.getDashboardData(),\n          AnalyticsService.getTriviaStats(),\n          AnalyticsService.getRetentionData(),\n          AnalyticsService.getAverageAccuracy(),\n          AnalyticsService.getActiveUsersByDay(),\n          AnalyticsService.getTopPowerUps(),\n          AnalyticsService.getUserRanking(),\n          AnalyticsService.getTradingStats(),\n          AnalyticsService.getTknsByDay(),\n          AnalyticsService.getTopCryptocurrencies(),\n          AnalyticsService.getMostFailedQuestions()\n        ]);\n\n        setDashboardData(dashboardRes);\n        setTriviaStats(triviaRes);\n        setRetentionData(retentionRes);\n\n        setAverageAccuracy(accuracyRes.promedioAciertos);\n        setActiveUsers(activeUsersRes);\n        setTopPowerUps(powerUpsRes);\n        setUserRanking(rankingRes);\n        setTradingStats(tradingRes);\n        setTknsByDay(tknsRes);\n        setTopCryptos(cryptosRes);\n        setFailedQuestions(failedQuestionsRes);\n\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <div className=\"dashboard\">Cargando datos del dashboard...</div>;\n  }\n\n  return (\n    <div className=\"dashboard light-theme\">\n      <div className=\"dashboard-row kpi-row\">\n        <SessionsCard sessionsCount={dashboardData?.sesiones} />\n        <RevenueCard revenue={dashboardData?.ingresos} />\n        <AverageAccuracyCard accuracy={averageAccuracy} />\n        <RetentionChart data={retentionData} />\n      </div>\n\n      <div className=\"dashboard-row\">\n        <AgeDistribution data={dashboardData?.edad} />\n        <GenderDistribution data={dashboardData?.genero} />\n        <ActiveUsersCard data={activeUsers} />\n      </div>\n\n      <div className=\"dashboard-row\">\n        <QuestionsCard triviaStats={triviaStats} />\n        <TopPowerUpsCard data={topPowerUps} />\n        <MostFailedQuestionsCard data={failedQuestions} />\n      </div>\n\n      <div className=\"dashboard-row\">\n        <UserRankingCard data={userRanking} />\n        <TradingStatsCard data={tradingStats} />\n      </div>\n\n      <div className=\"dashboard-row\">\n        <TknsByDayCard data={tknsByDay} />\n        <TopCryptocurrenciesCard data={topCryptos} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA;AACA,SACEA,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW;AAAS;AACpBC,YAAY,EACZC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAEjBT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW;AAAS;AACpBC,YAAY,EACZC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,OAAOE,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;;AAGxB;AACA,OAAOC,gBAAgB,MAAM,kCAAkC;;AAE/D;AACA,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,uBAAuB,MAAM,2BAA2B;AAC/D,OAAOC,uBAAuB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAM,CAAC6B,eAAe,EAAEC,kBAAkB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACqC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACuC,SAAS,EAAEC,YAAY,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACyC,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC2C,eAAe,EAAEC,kBAAkB,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd,MAAM4C,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAM,CACJC,YAAY,EACZC,SAAS,EACTC,YAAY,EACZC,WAAW,EACXC,cAAc,EACdC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,UAAU,EACVC,kBAAkB,CACnB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACpBxD,gBAAgB,CAACyD,gBAAgB,CAAC,CAAC,EACnCzD,gBAAgB,CAAC0D,cAAc,CAAC,CAAC,EACjC1D,gBAAgB,CAAC2D,gBAAgB,CAAC,CAAC,EACnC3D,gBAAgB,CAAC4D,kBAAkB,CAAC,CAAC,EACrC5D,gBAAgB,CAAC6D,mBAAmB,CAAC,CAAC,EACtC7D,gBAAgB,CAAC8D,cAAc,CAAC,CAAC,EACjC9D,gBAAgB,CAAC+D,cAAc,CAAC,CAAC,EACjC/D,gBAAgB,CAACgE,eAAe,CAAC,CAAC,EAClChE,gBAAgB,CAACiE,YAAY,CAAC,CAAC,EAC/BjE,gBAAgB,CAACkE,sBAAsB,CAAC,CAAC,EACzClE,gBAAgB,CAACmE,sBAAsB,CAAC,CAAC,CAC1C,CAAC;QAEF7C,gBAAgB,CAACsB,YAAY,CAAC;QAC9BpB,cAAc,CAACqB,SAAS,CAAC;QACzBnB,gBAAgB,CAACoB,YAAY,CAAC;QAE9BlB,kBAAkB,CAACmB,WAAW,CAACqB,gBAAgB,CAAC;QAChDtC,cAAc,CAACkB,cAAc,CAAC;QAC9BhB,cAAc,CAACiB,WAAW,CAAC;QAC3Bf,cAAc,CAACgB,UAAU,CAAC;QAC1Bd,eAAe,CAACe,UAAU,CAAC;QAC3Bb,YAAY,CAACc,OAAO,CAAC;QACrBZ,aAAa,CAACa,UAAU,CAAC;QACzBX,kBAAkB,CAACY,kBAAkB,CAAC;QAEtClC,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOiD,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDjD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDuB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIxB,OAAO,EAAE;IACX,oBAAOH,OAAA;MAAKuD,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzE;EAEA,oBACE5D,OAAA;IAAKuD,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCxD,OAAA;MAAKuD,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCxD,OAAA,CAACZ,YAAY;QAACyE,aAAa,EAAExD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEyD;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxD5D,OAAA,CAACX,WAAW;QAAC0E,OAAO,EAAE1D,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE2D;MAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjD5D,OAAA,CAACT,mBAAmB;QAAC0E,QAAQ,EAAEtD;MAAgB;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClD5D,OAAA,CAACb,cAAc;QAAC+E,IAAI,EAAEzD;MAAc;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eAEN5D,OAAA;MAAKuD,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BxD,OAAA,CAACf,eAAe;QAACiF,IAAI,EAAE7D,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE8D;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9C5D,OAAA,CAACd,kBAAkB;QAACgF,IAAI,EAAE7D,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE+D;MAAO;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnD5D,OAAA,CAACR,eAAe;QAAC0E,IAAI,EAAErD;MAAY;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAEN5D,OAAA;MAAKuD,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BxD,OAAA,CAACV,aAAa;QAACiB,WAAW,EAAEA;MAAY;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3C5D,OAAA,CAACP,eAAe;QAACyE,IAAI,EAAEnD;MAAY;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtC5D,OAAA,CAACF,uBAAuB;QAACoE,IAAI,EAAEzC;MAAgB;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eAEN5D,OAAA;MAAKuD,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BxD,OAAA,CAACN,eAAe;QAACwE,IAAI,EAAEjD;MAAY;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtC5D,OAAA,CAACL,gBAAgB;QAACuE,IAAI,EAAE/C;MAAa;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAEN5D,OAAA;MAAKuD,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BxD,OAAA,CAACJ,aAAa;QAACsE,IAAI,EAAE7C;MAAU;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClC5D,OAAA,CAACH,uBAAuB;QAACqE,IAAI,EAAE3C;MAAW;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1D,EAAA,CAvGID,SAAS;AAAAoE,EAAA,GAATpE,SAAS;AAyGf,eAAeA,SAAS;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}