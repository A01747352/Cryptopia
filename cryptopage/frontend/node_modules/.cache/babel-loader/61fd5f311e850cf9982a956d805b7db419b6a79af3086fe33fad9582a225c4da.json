{"ast":null,"code":"var _jsxFileName = \"/Users/santiserrano/Cryptopia/cryptopage/frontend/src/components/Dashboard/AverageAccuracyCard.jsx\";\nimport React from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AverageAccuracyCard = ({\n  accuracy\n}) => {\n  const progressValue = parseFloat(accuracy) || 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card average-accuracy-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Average Accuracy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '150px',\n          height: '150px',\n          margin: '0 auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          value: progressValue,\n          text: `${progressValue}%`,\n          styles: buildStyles({\n            textSize: '16px',\n            pathColor: `#6c63ff`,\n            textColor: '#ffffff',\n            trailColor: 'rgba(51, 51, 51, 0.7)',\n            pathTransition: 'stroke-dashoffset 0.5s ease-out'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accuracy-metrics\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"User performance in trivia questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = AverageAccuracyCard;\nexport default AverageAccuracyCard;\nvar _c;\n$RefreshReg$(_c, \"AverageAccuracyCard\");","map":{"version":3,"names":["React","CircularProgressbar","buildStyles","jsxDEV","_jsxDEV","AverageAccuracyCard","accuracy","progressValue","parseFloat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","margin","value","text","styles","textSize","pathColor","textColor","trailColor","pathTransition","_c","$RefreshReg$"],"sources":["/Users/santiserrano/Cryptopia/cryptopage/frontend/src/components/Dashboard/AverageAccuracyCard.jsx"],"sourcesContent":["import React from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst AverageAccuracyCard = ({ accuracy }) => {\n  const progressValue = parseFloat(accuracy) || 0;\n  \n  return (\n    <div className=\"card average-accuracy-card\">\n      <h2>Average Accuracy</h2>\n      <div className=\"progress-container\">\n        <div style={{ width: '150px', height: '150px', margin: '0 auto' }}>\n        <CircularProgressbar\n  value={progressValue}\n  text={`${progressValue}%`}\n  styles={buildStyles({\n    textSize: '16px',\n    pathColor: `#6c63ff`,\n    textColor: '#ffffff',\n    trailColor: 'rgba(51, 51, 51, 0.7)',\n    pathTransition: 'stroke-dashoffset 0.5s ease-out'\n  })}\n/>\n        </div>\n        <div className=\"accuracy-metrics\">\n          <p>User performance in trivia questions</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AverageAccuracyCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,4BAA4B;AAC7E,OAAO,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5C,MAAMC,aAAa,GAAGC,UAAU,CAACF,QAAQ,CAAC,IAAI,CAAC;EAE/C,oBACEF,OAAA;IAAKK,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACzCN,OAAA;MAAAM,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBV,OAAA;MAAKK,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCN,OAAA;QAAKW,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAS,CAAE;QAAAR,QAAA,eAClEN,OAAA,CAACH,mBAAmB;UAC1BkB,KAAK,EAAEZ,aAAc;UACrBa,IAAI,EAAE,GAAGb,aAAa,GAAI;UAC1Bc,MAAM,EAAEnB,WAAW,CAAC;YAClBoB,QAAQ,EAAE,MAAM;YAChBC,SAAS,EAAE,SAAS;YACpBC,SAAS,EAAE,SAAS;YACpBC,UAAU,EAAE,uBAAuB;YACnCC,cAAc,EAAE;UAClB,CAAC;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW,CAAC,eACNV,OAAA;QAAKK,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/BN,OAAA;UAAAM,QAAA,EAAG;QAAoC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACa,EAAA,GA1BItB,mBAAmB;AA4BzB,eAAeA,mBAAmB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}