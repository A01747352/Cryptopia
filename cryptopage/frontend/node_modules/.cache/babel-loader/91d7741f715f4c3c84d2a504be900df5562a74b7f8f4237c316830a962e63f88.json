{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:8081/api';\nconst AnalyticsService = {\n  // Endpoints existentes\n  getDashboardData: async () => {\n    const response = await axios.get(`${BASE_URL}/analytics/dashboard`);\n    return response.data;\n  },\n  getTriviaStats: async () => {\n    const response = await axios.get(`${BASE_URL}/trivia/estadisticas`);\n    return response.data;\n  },\n  getRetentionData: async () => {\n    const response = await axios.get(`${BASE_URL}/analytics/retencion`);\n    return response.data;\n  },\n  // Nuevos endpoints para las nuevas tarjetas\n  getAverageAccuracy: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/average-accuracy`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching average accuracy:', error);\n      // Datos ficticios para pruebas si el endpoint no existe\n      return {\n        promedioAciertos: 68.5\n      };\n    }\n  },\n  getActiveUsersByDay: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/active-users`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching active users:', error);\n      // Datos ficticios para pruebas\n      return [{\n        dia: '2023-04-15',\n        usuarios: 45\n      }, {\n        dia: '2023-04-16',\n        usuarios: 52\n      }, {\n        dia: '2023-04-17',\n        usuarios: 48\n      }, {\n        dia: '2023-04-18',\n        usuarios: 60\n      }, {\n        dia: '2023-04-19',\n        usuarios: 55\n      }, {\n        dia: '2023-04-20',\n        usuarios: 70\n      }, {\n        dia: '2023-04-21',\n        usuarios: 65\n      }];\n    }\n  },\n  getTopPowerUps: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/top-powerups`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching top power-ups:', error);\n      // Datos ficticios para pruebas\n      return [{\n        nombre: 'Double Points',\n        veces_usado: 320\n      }, {\n        nombre: 'Time Boost',\n        veces_usado: 245\n      }, {\n        nombre: 'Skip Question',\n        veces_usado: 198\n      }, {\n        nombre: 'Extra Life',\n        veces_usado: 156\n      }, {\n        nombre: 'Coin Multiplier',\n        veces_usado: 134\n      }];\n    }\n  },\n  getUserRanking: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/user-ranking`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user ranking:', error);\n      // Datos ficticios para pruebas\n      return [{\n        username: 'crypto_master',\n        totalPuntaje: 12500\n      }, {\n        username: 'blockchain_guru',\n        totalPuntaje: 10800\n      }, {\n        username: 'hodl_king',\n        totalPuntaje: 9750\n      }, {\n        username: 'satoshi_fan',\n        totalPuntaje: 8600\n      }, {\n        username: 'nft_collector',\n        totalPuntaje: 7900\n      }];\n    }\n  },\n  getTradingStats: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/trading-stats`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching trading stats:', error);\n      // Datos ficticios para pruebas\n      return {\n        totalTrades: 1256,\n        totalVolumen: 45678.90\n      };\n    }\n  },\n  getTknsByDay: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/tkns-by-day`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching TKNs by day:', error);\n      // Datos ficticios para pruebas\n      return [{\n        dia: '2023-04-15',\n        totalTKNs: 1250\n      }, {\n        dia: '2023-04-16',\n        totalTKNs: 1450\n      }, {\n        dia: '2023-04-17',\n        totalTKNs: 1320\n      }, {\n        dia: '2023-04-18',\n        totalTKNs: 1580\n      }, {\n        dia: '2023-04-19',\n        totalTKNs: 1680\n      }, {\n        dia: '2023-04-20',\n        totalTKNs: 1850\n      }, {\n        dia: '2023-04-21',\n        totalTKNs: 1720\n      }];\n    }\n  },\n  getTopCryptocurrencies: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/top-cryptocurrencies`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching top cryptocurrencies:', error);\n      // Datos ficticios para pruebas\n      return [{\n        nombre: 'Bitcoin',\n        total: 125.35\n      }, {\n        nombre: 'Ethereum',\n        total: 458.72\n      }, {\n        nombre: 'Cardano',\n        total: 3450.21\n      }, {\n        nombre: 'Solana',\n        total: 892.45\n      }, {\n        nombre: 'Polkadot',\n        total: 765.33\n      }];\n    }\n  },\n  getMostFailedQuestions: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/most-failed-questions`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching most failed questions:', error);\n      // Datos ficticios para pruebas\n      return [{\n        pregunta: '¿Qué es un hash en blockchain?',\n        errores: 125\n      }, {\n        pregunta: '¿Qué es un smart contract?',\n        errores: 98\n      }, {\n        pregunta: '¿Qué significa PoW?',\n        errores: 87\n      }, {\n        pregunta: '¿Cuál fue la primera criptomoneda?',\n        errores: 65\n      }, {\n        pregunta: '¿Qué es un token NFT?',\n        errores: 54\n      }];\n    }\n  }\n};\nexport default AnalyticsService;","map":{"version":3,"names":["axios","BASE_URL","AnalyticsService","getDashboardData","response","get","data","getTriviaStats","getRetentionData","getAverageAccuracy","error","console","promedioAciertos","getActiveUsersByDay","dia","usuarios","getTopPowerUps","nombre","veces_usado","getUserRanking","username","totalPuntaje","getTradingStats","totalTrades","totalVolumen","getTknsByDay","totalTKNs","getTopCryptocurrencies","total","getMostFailedQuestions","pregunta","errores"],"sources":["/Users/santiserrano/Cryptopia/cryptopage/frontend/src/services/analytics-service.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:8081/api';\n\nconst AnalyticsService = {\n  // Endpoints existentes\n  getDashboardData: async () => {\n    const response = await axios.get(`${BASE_URL}/analytics/dashboard`);\n    return response.data;\n  },\n\n  getTriviaStats: async () => {\n    const response = await axios.get(`${BASE_URL}/trivia/estadisticas`);\n    return response.data;\n  },\n\n  getRetentionData: async () => {\n    const response = await axios.get(`${BASE_URL}/analytics/retencion`);\n    return response.data;\n  },\n\n  // Nuevos endpoints para las nuevas tarjetas\n  getAverageAccuracy: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/average-accuracy`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching average accuracy:', error);\n      // Datos ficticios para pruebas si el endpoint no existe\n      return { promedioAciertos: 68.5 };\n    }\n  },\n\n  getActiveUsersByDay: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/active-users`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching active users:', error);\n      // Datos ficticios para pruebas\n      return [\n        { dia: '2023-04-15', usuarios: 45 },\n        { dia: '2023-04-16', usuarios: 52 },\n        { dia: '2023-04-17', usuarios: 48 },\n        { dia: '2023-04-18', usuarios: 60 },\n        { dia: '2023-04-19', usuarios: 55 },\n        { dia: '2023-04-20', usuarios: 70 },\n        { dia: '2023-04-21', usuarios: 65 }\n      ];\n    }\n  },\n\n  getTopPowerUps: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/top-powerups`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching top power-ups:', error);\n      // Datos ficticios para pruebas\n      return [\n        { nombre: 'Double Points', veces_usado: 320 },\n        { nombre: 'Time Boost', veces_usado: 245 },\n        { nombre: 'Skip Question', veces_usado: 198 },\n        { nombre: 'Extra Life', veces_usado: 156 },\n        { nombre: 'Coin Multiplier', veces_usado: 134 }\n      ];\n    }\n  },\n\n  getUserRanking: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/user-ranking`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user ranking:', error);\n      // Datos ficticios para pruebas\n      return [\n        { username: 'crypto_master', totalPuntaje: 12500 },\n        { username: 'blockchain_guru', totalPuntaje: 10800 },\n        { username: 'hodl_king', totalPuntaje: 9750 },\n        { username: 'satoshi_fan', totalPuntaje: 8600 },\n        { username: 'nft_collector', totalPuntaje: 7900 }\n      ];\n    }\n  },\n\n  getTradingStats: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/trading-stats`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching trading stats:', error);\n      // Datos ficticios para pruebas\n      return { totalTrades: 1256, totalVolumen: 45678.90 };\n    }\n  },\n\n  getTknsByDay: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/tkns-by-day`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching TKNs by day:', error);\n      // Datos ficticios para pruebas\n      return [\n        { dia: '2023-04-15', totalTKNs: 1250 },\n        { dia: '2023-04-16', totalTKNs: 1450 },\n        { dia: '2023-04-17', totalTKNs: 1320 },\n        { dia: '2023-04-18', totalTKNs: 1580 },\n        { dia: '2023-04-19', totalTKNs: 1680 },\n        { dia: '2023-04-20', totalTKNs: 1850 },\n        { dia: '2023-04-21', totalTKNs: 1720 }\n      ];\n    }\n  },\n\n  getTopCryptocurrencies: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/top-cryptocurrencies`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching top cryptocurrencies:', error);\n      // Datos ficticios para pruebas\n      return [\n        { nombre: 'Bitcoin', total: 125.35 },\n        { nombre: 'Ethereum', total: 458.72 },\n        { nombre: 'Cardano', total: 3450.21 },\n        { nombre: 'Solana', total: 892.45 },\n        { nombre: 'Polkadot', total: 765.33 }\n      ];\n    }\n  },\n\n  getMostFailedQuestions: async () => {\n    // Este endpoint debería implementarse en el backend\n    try {\n      const response = await axios.get(`${BASE_URL}/analytics/most-failed-questions`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching most failed questions:', error);\n      // Datos ficticios para pruebas\n      return [\n        { pregunta: '¿Qué es un hash en blockchain?', errores: 125 },\n        { pregunta: '¿Qué es un smart contract?', errores: 98 },\n        { pregunta: '¿Qué significa PoW?', errores: 87 },\n        { pregunta: '¿Cuál fue la primera criptomoneda?', errores: 65 },\n        { pregunta: '¿Qué es un token NFT?', errores: 54 }\n      ];\n    }\n  }\n};\n\nexport default AnalyticsService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}