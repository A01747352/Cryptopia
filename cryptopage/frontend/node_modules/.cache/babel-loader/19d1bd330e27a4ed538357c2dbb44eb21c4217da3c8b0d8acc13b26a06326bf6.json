{"ast":null,"code":"var _jsxFileName = \"/Users/santiserrano/Cryptopia/cryptopage/frontend/src/components/Dashboard/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport AnalyticsService from '../../services/analytics-service';\n\n// Componentes existentes\nimport AgeDistribution from './AgeDistribution';\nimport GenderDistribution from './GenderDistribution';\nimport RetentionChart from './RetentionChart';\nimport SessionsCard from './SessionsCard';\nimport RevenueCard from './RevenueCard';\nimport QuestionsCard from './QuestionsCard';\n\n// Nuevos componentes\nimport AverageAccuracyCard from './AverageAccuracyCard';\nimport ActiveUsersCard from './ActiveUsersCard';\nimport TopPowerUpsCard from './TopPowerUpsCard';\nimport UserRankingCard from './UserRankingCard';\nimport TradingStatsCard from './TradingStatsCard';\nimport TknsByDayCard from './TknsByDayCard';\nimport TopCryptocurrenciesCard from './TopCryptocurrenciesCard';\nimport MostFailedQuestionsCard from './MostFailedQuestionsCard';\nimport './Dashboard.css';\n\n// Registrar componentes de Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [triviaStats, setTriviaStats] = useState(null);\n  const [retentionData, setRetentionData] = useState(null);\n\n  // Estados para los nuevos datos\n  const [averageAccuracy, setAverageAccuracy] = useState(null);\n  const [activeUsers, setActiveUsers] = useState(null);\n  const [topPowerUps, setTopPowerUps] = useState(null);\n  const [userRanking, setUserRanking] = useState(null);\n  const [tradingStats, setTradingStats] = useState(null);\n  const [tknsByDay, setTknsByDay] = useState(null);\n  const [topCryptos, setTopCryptos] = useState(null);\n  const [failedQuestions, setFailedQuestions] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Cargar datos existentes\n        const [dashboardRes, triviaRes, retentionRes,\n        // Nuevos endpoints\n        accuracyRes, activeUsersRes, powerUpsRes, rankingRes, tradingRes, tknsRes, cryptosRes, failedQuestionsRes] = await Promise.all([\n        // Endpoints existentes\n        AnalyticsService.getDashboardData(), AnalyticsService.getTriviaStats(), AnalyticsService.getRetentionData(),\n        // Nuevos endpoints\n        AnalyticsService.getAverageAccuracy(), AnalyticsService.getActiveUsersByDay(), AnalyticsService.getTopPowerUps(), AnalyticsService.getUserRanking(), AnalyticsService.getTradingStats(), AnalyticsService.getTknsByDay(), AnalyticsService.getTopCryptocurrencies(), AnalyticsService.getMostFailedQuestions()]);\n\n        // Establecer datos existentes\n        setDashboardData(dashboardRes);\n        setTriviaStats(triviaRes);\n        setRetentionData(retentionRes);\n\n        // Establecer nuevos datos\n        setAverageAccuracy(accuracyRes.promedioAciertos);\n        setActiveUsers(activeUsersRes);\n        setTopPowerUps(powerUpsRes);\n        setUserRanking(rankingRes);\n        setTradingStats(tradingRes);\n        setTknsByDay(tknsRes);\n        setTopCryptos(cryptosRes);\n        setFailedQuestions(failedQuestionsRes);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(AgeDistribution, {\n        data: dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.edad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GenderDistribution, {\n        data: dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.genero\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RetentionChart, {\n        data: retentionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(SessionsCard, {\n        sessionsCount: dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.sesiones\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RevenueCard, {\n        revenue: dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.ingresos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionsCard, {\n        triviaStats: triviaStats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(AverageAccuracyCard, {\n        accuracy: averageAccuracy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActiveUsersCard, {\n        data: activeUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopPowerUpsCard, {\n        data: topPowerUps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(UserRankingCard, {\n        data: userRanking\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TradingStatsCard, {\n        data: tradingStats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TknsByDayCard, {\n        data: tknsByDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(TopCryptocurrenciesCard, {\n        data: topCryptos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MostFailedQuestionsCard, {\n        data: failedQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"u1Ygjxbzc6UXjm+gsv/WFWbGI5Y=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","AnalyticsService","AgeDistribution","GenderDistribution","RetentionChart","SessionsCard","RevenueCard","QuestionsCard","AverageAccuracyCard","ActiveUsersCard","TopPowerUpsCard","UserRankingCard","TradingStatsCard","TknsByDayCard","TopCryptocurrenciesCard","MostFailedQuestionsCard","jsxDEV","_jsxDEV","register","Dashboard","_s","loading","setLoading","dashboardData","setDashboardData","triviaStats","setTriviaStats","retentionData","setRetentionData","averageAccuracy","setAverageAccuracy","activeUsers","setActiveUsers","topPowerUps","setTopPowerUps","userRanking","setUserRanking","tradingStats","setTradingStats","tknsByDay","setTknsByDay","topCryptos","setTopCryptos","failedQuestions","setFailedQuestions","fetchData","dashboardRes","triviaRes","retentionRes","accuracyRes","activeUsersRes","powerUpsRes","rankingRes","tradingRes","tknsRes","cryptosRes","failedQuestionsRes","Promise","all","getDashboardData","getTriviaStats","getRetentionData","getAverageAccuracy","getActiveUsersByDay","getTopPowerUps","getUserRanking","getTradingStats","getTknsByDay","getTopCryptocurrencies","getMostFailedQuestions","promedioAciertos","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","edad","genero","sessionsCount","sesiones","revenue","ingresos","accuracy","_c","$RefreshReg$"],"sources":["/Users/santiserrano/Cryptopia/cryptopage/frontend/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Chart as ChartJS, \n  CategoryScale, \n  LinearScale, \n  PointElement, \n  LineElement,\n  BarElement,\n  ArcElement,\n  Title, \n  Tooltip, \n  Legend \n} from 'chart.js';\nimport AnalyticsService from '../../services/analytics-service';\n\n// Componentes existentes\nimport AgeDistribution from './AgeDistribution';\nimport GenderDistribution from './GenderDistribution';\nimport RetentionChart from './RetentionChart';\nimport SessionsCard from './SessionsCard';\nimport RevenueCard from './RevenueCard';\nimport QuestionsCard from './QuestionsCard';\n\n// Nuevos componentes\nimport AverageAccuracyCard from './AverageAccuracyCard';\nimport ActiveUsersCard from './ActiveUsersCard';\nimport TopPowerUpsCard from './TopPowerUpsCard';\nimport UserRankingCard from './UserRankingCard';\nimport TradingStatsCard from './TradingStatsCard';\nimport TknsByDayCard from './TknsByDayCard';\nimport TopCryptocurrenciesCard from './TopCryptocurrenciesCard';\nimport MostFailedQuestionsCard from './MostFailedQuestionsCard';\n\nimport './Dashboard.css';\n\n// Registrar componentes de Chart.js\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [triviaStats, setTriviaStats] = useState(null);\n  const [retentionData, setRetentionData] = useState(null);\n  \n  // Estados para los nuevos datos\n  const [averageAccuracy, setAverageAccuracy] = useState(null);\n  const [activeUsers, setActiveUsers] = useState(null);\n  const [topPowerUps, setTopPowerUps] = useState(null);\n  const [userRanking, setUserRanking] = useState(null);\n  const [tradingStats, setTradingStats] = useState(null);\n  const [tknsByDay, setTknsByDay] = useState(null);\n  const [topCryptos, setTopCryptos] = useState(null);\n  const [failedQuestions, setFailedQuestions] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Cargar datos existentes\n        const [\n          dashboardRes, \n          triviaRes, \n          retentionRes,\n          // Nuevos endpoints\n          accuracyRes,\n          activeUsersRes,\n          powerUpsRes,\n          rankingRes,\n          tradingRes,\n          tknsRes,\n          cryptosRes,\n          failedQuestionsRes\n        ] = await Promise.all([\n          // Endpoints existentes\n          AnalyticsService.getDashboardData(),\n          AnalyticsService.getTriviaStats(),\n          AnalyticsService.getRetentionData(),\n          // Nuevos endpoints\n          AnalyticsService.getAverageAccuracy(),\n          AnalyticsService.getActiveUsersByDay(),\n          AnalyticsService.getTopPowerUps(),\n          AnalyticsService.getUserRanking(),\n          AnalyticsService.getTradingStats(),\n          AnalyticsService.getTknsByDay(),\n          AnalyticsService.getTopCryptocurrencies(),\n          AnalyticsService.getMostFailedQuestions()\n        ]);\n\n        // Establecer datos existentes\n        setDashboardData(dashboardRes);\n        setTriviaStats(triviaRes);\n        setRetentionData(retentionRes);\n        \n        // Establecer nuevos datos\n        setAverageAccuracy(accuracyRes.promedioAciertos);\n        setActiveUsers(activeUsersRes);\n        setTopPowerUps(powerUpsRes);\n        setUserRanking(rankingRes);\n        setTradingStats(tradingRes);\n        setTknsByDay(tknsRes);\n        setTopCryptos(cryptosRes);\n        setFailedQuestions(failedQuestionsRes);\n        \n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <div className=\"loading\">Cargando...</div>;\n  }\n\n  return (\n    <div className=\"dashboard\">\n      {/* Primera fila - Cards originales */}\n      <div className=\"dashboard-grid\">\n        <AgeDistribution data={dashboardData?.edad} />\n        <GenderDistribution data={dashboardData?.genero} />\n        <RetentionChart data={retentionData} />\n      </div>\n      \n      {/* Segunda fila - Más cards originales */}\n      <div className=\"dashboard-grid\">\n        <SessionsCard sessionsCount={dashboardData?.sesiones} />\n        <RevenueCard revenue={dashboardData?.ingresos} />\n        <QuestionsCard triviaStats={triviaStats} />\n      </div>\n      \n      {/* Tercera fila - Nuevas cards */}\n      <div className=\"dashboard-grid\">\n        <AverageAccuracyCard accuracy={averageAccuracy} />\n        <ActiveUsersCard data={activeUsers} />\n        <TopPowerUpsCard data={topPowerUps} />\n      </div>\n      \n      {/* Cuarta fila - Más nuevas cards */}\n      <div className=\"dashboard-grid\">\n        <UserRankingCard data={userRanking} />\n        <TradingStatsCard data={tradingStats} />\n        <TknsByDayCard data={tknsByDay} />\n      </div>\n      \n      {/* Quinta fila - Últimas nuevas cards */}\n      <div className=\"dashboard-grid\">\n        <TopCryptocurrenciesCard data={topCryptos} />\n        <MostFailedQuestionsCard data={failedQuestions} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}