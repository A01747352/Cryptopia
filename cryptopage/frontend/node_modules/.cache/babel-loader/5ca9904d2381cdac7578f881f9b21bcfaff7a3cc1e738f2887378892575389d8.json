{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuestionsCard=_ref=>{let{triviaStats}=_ref;if(!triviaStats)return null;// Extraer las preguntas más y menos acertadas\nconst topQuestions=triviaStats.estadisticasPorcentajes.slice(0,4);const bottomQuestions=[...triviaStats.estadisticasPorcentajes].sort((a,b)=>a.porcentaje-b.porcentaje).slice(0,4);return/*#__PURE__*/_jsxs(\"div\",{className:\"card questions-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Questions\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"questions-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"top-questions\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Top Correct\"}),/*#__PURE__*/_jsx(\"ul\",{children:topQuestions.map(q=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{children:q.pregunta.length>30?q.pregunta.substring(0,30)+'...':q.pregunta}),/*#__PURE__*/_jsxs(\"span\",{className:\"percentage\",children:[q.porcentaje,\"%\"]})]},q.idPregunta))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bottom-questions\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Bottom Correct\"}),/*#__PURE__*/_jsx(\"ul\",{children:bottomQuestions.map(q=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{children:q.pregunta.length>30?q.pregunta.substring(0,30)+'...':q.pregunta}),/*#__PURE__*/_jsxs(\"span\",{className:\"percentage\",children:[q.porcentaje,\"%\"]})]},q.idPregunta))})]})]})]});};export default QuestionsCard;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","QuestionsCard","_ref","triviaStats","topQuestions","estadisticasPorcentajes","slice","bottomQuestions","sort","a","b","porcentaje","className","children","map","q","pregunta","length","substring","idPregunta"],"sources":["/Users/santiserrano/Cryptopia/cryptopage/frontend/src/components/Dashboard/QuestionsCard.jsx"],"sourcesContent":["import React from 'react';\n\nconst QuestionsCard = ({ triviaStats }) => {\n  if (!triviaStats) return null;\n\n  // Extraer las preguntas más y menos acertadas\n  const topQuestions = triviaStats.estadisticasPorcentajes.slice(0, 4);\n  const bottomQuestions = [...triviaStats.estadisticasPorcentajes]\n    .sort((a, b) => a.porcentaje - b.porcentaje)\n    .slice(0, 4);\n\n  return (\n    <div className=\"card questions-card\">\n      <h2>Questions</h2>\n      \n      <div className=\"questions-container\">\n        <div className=\"top-questions\">\n          <h3>Top Correct</h3>\n          <ul>\n            {topQuestions.map(q => (\n              <li key={q.idPregunta}>\n                <span>{q.pregunta.length > 30 ? q.pregunta.substring(0, 30) + '...' : q.pregunta}</span>\n                <span className=\"percentage\">{q.porcentaje}%</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n        \n        <div className=\"bottom-questions\">\n          <h3>Bottom Correct</h3>\n          <ul>\n            {bottomQuestions.map(q => (\n              <li key={q.idPregunta}>\n                <span>{q.pregunta.length > 30 ? q.pregunta.substring(0, 30) + '...' : q.pregunta}</span>\n                <span className=\"percentage\">{q.porcentaje}%</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionsCard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAqB,IAApB,CAAEC,WAAY,CAAC,CAAAD,IAAA,CACpC,GAAI,CAACC,WAAW,CAAE,MAAO,KAAI,CAE7B;AACA,KAAM,CAAAC,YAAY,CAAGD,WAAW,CAACE,uBAAuB,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CACpE,KAAM,CAAAC,eAAe,CAAG,CAAC,GAAGJ,WAAW,CAACE,uBAAuB,CAAC,CAC7DG,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACE,UAAU,CAAGD,CAAC,CAACC,UAAU,CAAC,CAC3CL,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAEd,mBACEN,KAAA,QAAKY,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCf,IAAA,OAAAe,QAAA,CAAI,WAAS,CAAI,CAAC,cAElBb,KAAA,QAAKY,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCb,KAAA,QAAKY,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5Bf,IAAA,OAAAe,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBf,IAAA,OAAAe,QAAA,CACGT,YAAY,CAACU,GAAG,CAACC,CAAC,eACjBf,KAAA,OAAAa,QAAA,eACEf,IAAA,SAAAe,QAAA,CAAOE,CAAC,CAACC,QAAQ,CAACC,MAAM,CAAG,EAAE,CAAGF,CAAC,CAACC,QAAQ,CAACE,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,KAAK,CAAGH,CAAC,CAACC,QAAQ,CAAO,CAAC,cACxFhB,KAAA,SAAMY,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAEE,CAAC,CAACJ,UAAU,CAAC,GAAC,EAAM,CAAC,GAF5CI,CAAC,CAACI,UAGP,CACL,CAAC,CACA,CAAC,EACF,CAAC,cAENnB,KAAA,QAAKY,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/Bf,IAAA,OAAAe,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBf,IAAA,OAAAe,QAAA,CACGN,eAAe,CAACO,GAAG,CAACC,CAAC,eACpBf,KAAA,OAAAa,QAAA,eACEf,IAAA,SAAAe,QAAA,CAAOE,CAAC,CAACC,QAAQ,CAACC,MAAM,CAAG,EAAE,CAAGF,CAAC,CAACC,QAAQ,CAACE,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,KAAK,CAAGH,CAAC,CAACC,QAAQ,CAAO,CAAC,cACxFhB,KAAA,SAAMY,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAEE,CAAC,CAACJ,UAAU,CAAC,GAAC,EAAM,CAAC,GAF5CI,CAAC,CAACI,UAGP,CACL,CAAC,CACA,CAAC,EACF,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}